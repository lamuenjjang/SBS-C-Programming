#pragma once
#include <stdio.h>
/*
void main()
{
	// 부호가 없는 자료형
	unsigned char value = 255; // 0 ~ 255
	unsigned short variable;  // 0 ~ 65535

	printf("unsighned char의 값 : %d\n", value);

	// 실수를 저장하는 방법
	// IEEE 754
	// float - 4 byte     32bits (단정도)
	// double - 8 byte    64bits (배정도)

	// 고정 소수점
	// 소수점을 사용하여 고정된 자릿수의 소수를 나타내는 방법입니다.
	// [1]  [15] [16] < - 8 byte
	// 부호 지수 가수

	// 부동 소수점
	// 소수점의 위치를 고정하지 않고 그 위치를 나타내는	수를 따로 적는 것으로 
	// 유효숫자를 나타내는 가수와 소수점의 위치를 풀이하는 지수로나누어 표현하는 방법
	// [1]  [8]  [23] <- 4 byte (정밀도 소수점 6자릿수)
	// [1]  [13] [52] <- 8 byte (정밀도	소수점 15자릿수)
	// 부호 지수 가수 


	float pi = 0.3;
	double rotation = 1.25;

	// 9.25 = 1001.01
	//1.00101 x 2^3
	// 첫번째로 정규화 (소수점을 왼쪽으로 이동시켜 정수부가 한자릿수가 되도록 옮기는 과정입니다.)
	// (이동시킨 자릿수 만큽을 2의지수로 곱해줍니다.)
	// 
	// bais = (float 127), (double 1023)
	// 3 + 127 = 130
	// 1000 0010

	// [0] [10000010] [10010100000000000000000]

	// 4 == 4 ok
	// 4.71 == 4.71no

	// 정밀도
	// float 오차없이 표현할 수 있는 수 (소수점 6 자릿수)
	// double 오차없이 표현할 수 있는 수 (소수점 15자릿수)
	printf("float 변수의 값은? : %.10f\n", pi); // 부동 소수점 오차
	printf("double 변수의 값은? : %.15lf\n", rotation);


	// 관계 연산자
	// 2개의 실체간의 특정한 종류의 관계를 비교하여 원하는 값을 출력하는 연산자입니다.
	// 컴퓨터에서의 0은 거짓을 의미하고 1은 진실을 의미합니다.
	int a = 10 > 5;
	int b = 10 == 10;
	int c = 10 >= 10;

	printf("a의 값은 : %d\n", a);
	printf("b의 값은 : %d\n", b);
	printf("c의 값은 : %d\n", c);

	// 조건문
	// if문과 여러개의 else if문의 조건이 참이라면 가장 위에있는 조건문만 실행됩니다.
	// if문은 조건으로 0만 들어가지 않는다면 실행됩니다.
	// if : 어떤 특정한 조건을 비교하여 조건이 맞다면 실행되는 명령문입니다.
	if (0) // if문의 조건이 참이면 if문 안 쪽에 { }부분이 실행됩니다.
	{
		// if문이 거짓이면 if문 안쪽에 있는 { }부분이 실행되지 않습니다.
		printf("첫번째 조건");
	}
	else if (0)
	{
		// else if문은 if문의 조건이 거짓이라면 조건이 비교하여 실행하는 조건문입니다.
		// else if문을 사용하기 위해서는 if문을 사용한 다음 사용할 수 있습니다.
		printf("두번째 조건");
	}
	else if (0)
	{
		printf("세번째 조건");
	}
	else
	{
		// else : if문의 조건과 else if문의 조건이 둘 다 거짓이라면 실행되는 조건문입니다.
		printf("if문의 조건과 else if문의 조건이 모두 틀립니다.\n");
	}



	if (1)
	{
		printf("두번째 if문입니다\n");
	}
	if (1)
	{
		printf("세번째 if문입니다\n");
	}

	// switch : 어떤 결과에 따라 그 결과부터 실행되는 명령문입니다.
	// go to
}*/
